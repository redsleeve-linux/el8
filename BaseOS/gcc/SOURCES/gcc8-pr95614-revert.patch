2020-09-28  Jakub Jelinek  <jakub@redhat.com>

	Revert:
	2020-09-27  Steven G. Kargl  <kargl@gcc.gnu.org>
		    Mark Eggleston  <markeggleston@gcc.gnu.org>

	PR fortran/95614
	* decl.c (gfc_get_common): Use gfc_match_common_name instead
	of match_common_name.
	* decl.c (gfc_bind_idents): Use gfc_match_common_name instead
	of match_common_name.
	* match.c : Rename match_common_name to gfc_match_common_name.
	* match.c (gfc_match_common): Use gfc_match_common_name instead
	of match_common_name.
	* match.h : Rename match_common_name to gfc_match_common_name.
	* resolve.c (resolve_common_vars): Check each symbol in a
	common block has a global symbol.  If there is a global symbol
	issue an error if the symbol type is known as is not a common
	block name.

--- gcc/fortran/decl.c
+++ gcc/fortran/decl.c
@@ -5789,7 +5789,7 @@ get_bind_c_idents (void)
       found_id = MATCH_YES;
       gfc_get_ha_symbol (name, &tmp_sym);
     }
-  else if (gfc_match_common_name (name) == MATCH_YES)
+  else if (match_common_name (name) == MATCH_YES)
     {
       found_id = MATCH_YES;
       com_block = gfc_get_common (name, 0);
@@ -5834,7 +5834,7 @@ get_bind_c_idents (void)
 	      found_id = MATCH_YES;
 	      gfc_get_ha_symbol (name, &tmp_sym);
 	    }
-	  else if (gfc_match_common_name (name) == MATCH_YES)
+	  else if (match_common_name (name) == MATCH_YES)
 	    {
 	      found_id = MATCH_YES;
 	      com_block = gfc_get_common (name, 0);
--- gcc/fortran/match.c
+++ gcc/fortran/match.c
@@ -5028,8 +5028,7 @@ gfc_get_common (const char *name, int from_module)
 
 /* Match a common block name.  */
 
-match
-gfc_match_common_name (char *name)
+match match_common_name (char *name)
 {
   match m;
 
@@ -5073,7 +5072,7 @@ gfc_match_common (void)
 
   for (;;)
     {
-      m = gfc_match_common_name (name);
+      m = match_common_name (name);
       if (m == MATCH_ERROR)
 	goto cleanup;
 
--- gcc/fortran/match.h
+++ gcc/fortran/match.h
@@ -103,9 +103,11 @@ match gfc_match_call (void);
 
 /* We want to use this function to check for a common-block-name
    that can exist in a bind statement, so removed the "static"
-   declaration of the function in match.c. */
+   declaration of the function in match.c.
  
-match gfc_match_common_name (char *name);
+   TODO: should probably rename this now that it'll be globally seen to
+   gfc_match_common_name.  */
+match match_common_name (char *name);
 
 match gfc_match_common (void);
 match gfc_match_block_data (void);
--- gcc/fortran/resolve.c
+++ gcc/fortran/resolve.c
@@ -932,16 +932,9 @@ static void
 resolve_common_vars (gfc_common_head *common_block, bool named_common)
 {
   gfc_symbol *csym = common_block->head;
-  gfc_gsymbol *gsym;
 
   for (; csym; csym = csym->common_next)
     {
-      gsym = gfc_find_gsymbol (gfc_gsym_root, csym->name);
-      if (gsym && gsym->type != GSYM_UNKNOWN && gsym->type != GSYM_COMMON)
-	gfc_error_now ("Global entity %qs at %L cannot appear in a "
-			"COMMON block at %L", gsym->name,
-			&gsym->where, &csym->common_block->where);
-
       /* gfc_add_in_common may have been called before, but the reported errors
 	 have been ignored to continue parsing.
 	 We do the checks again here.  */
